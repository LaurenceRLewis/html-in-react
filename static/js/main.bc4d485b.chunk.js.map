{"version":3,"sources":["components/StaticContent/StaticContent.js","components/Email/Email.js","components/Email/EmailValidation.js","components/Name/Name.js","components/Name/NameValidation.js","App.js","index.js"],"names":["StaticContent","EditEmail","useState","email","setEmail","isEditing","setIsEditing","isValid","setIsValid","statusMessage","setStatusMessage","emailInputCount","setEmailInputCount","editBtnRef","useRef","inputRef","handleEdit","newEmail","current","value","test","validateEmail","setTimeout","focus","useEffect","id","type","name","defaultValue","ref","className","onClick","EditName","setName","nameInputCount","setNameInputCount","newName","validateName","App","Email","Name","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bc4d485b.chunk.js","sourcesContent":["import React from \"react\";\n//import \"./StaticContent.css\";\n\nfunction StaticContent() {\n  return (\n    <>\n      <dt>Passport number</dt>\n      <dd>M988****</dd>\n      <dt>Mobile number</dt>\n      <dd>0402888555</dd>\n    </>\n  );\n}\n\nexport default StaticContent;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { validateEmail } from \"./EmailValidation\";\n\nfunction EditEmail() {\n  const [email, setEmail] = useState(\"myemail@getnada.com\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [emailInputCount, setEmailInputCount] = useState(0);\n  const editBtnRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const handleEdit = () => {\n    if (!isEditing) {\n      setIsEditing(true);\n      setStatusMessage(\"\");\n      setTimeout(() => {\n        inputRef.current.focus();\n      }, 0);\n    } else {\n      const newEmail = inputRef.current.value;\n      const isValid = validateEmail(newEmail);\n      setIsValid(isValid);\n      if (isValid) {\n        setEmail(newEmail);\n        setIsEditing(false);\n        setStatusMessage(\"Your Email is successfully updated.\");\n        setTimeout(() => {\n          editBtnRef.current.focus();\n        }, 0);\n        setEmailInputCount(0);\n      } else {\n        setEmailInputCount(emailInputCount + 1);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isValid && emailInputCount >= 1) {\n      inputRef.current.focus();\n    }\n  }, [isValid, emailInputCount]);\n\n  return (\n    <>\n      <dt id=\"keyEmail\">Email:</dt>\n      {isEditing ? (\n        <dd>\n          <input\n            type=\"text\"\n            id=\"emailID\"\n            name=\"name\"\n            aria-labelledby=\"keyEmail\"\n            defaultValue={email}\n            ref={inputRef}\n            aria-invalid={!isValid}\n            aria-errormessage={isValid ? \"\" : \"email-error\"}\n          />\n          {!isValid && (\n            <p id=\"email-error\" className=\"error-message\">\n              Error! Please enter a valid email address.\n            </p>\n          )}\n          <button className=\"btn--save\" onClick={handleEdit}>\n            Save\n          </button>\n        </dd>\n      ) : (\n        <dd>\n          {email}\n          <button\n            aria-describedby=\"EmailSuccess\"\n            className=\"btn--edit\"\n            onClick={handleEdit}\n            ref={editBtnRef}\n          >\n            Edit email\n          </button>\n          <div id=\"EmailSuccess\" aria-live=\"polite\">\n            {statusMessage && <p className=\"status-message\">{statusMessage}</p>}\n          </div>\n        </dd>\n      )}\n    </>\n  );\n}\n\nexport default EditEmail;\n","export function validateEmail(email) {\n  const nameRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  return nameRegex.test(email);\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { validateName } from \"./NameValidation\";\n\nfunction EditName() {\n  const [name, setName] = useState(\"Given name\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [nameInputCount, setNameInputCount] = useState(0);\n  const editBtnRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const handleEdit = () => {\n    if (!isEditing) {\n      setIsEditing(true);\n      setStatusMessage(\"\");\n      setTimeout(() => {\n        inputRef.current.focus();\n      }, 0);\n    } else {\n      const newName = inputRef.current.value;\n      const isValid = validateName(newName);\n      setIsValid(isValid);\n      if (isValid) {\n        setName(newName);\n        setIsEditing(false);\n        setStatusMessage(\"Please enter a valid name\");\n        setTimeout(() => {\n          editBtnRef.current.focus();\n        }, 0);\n        setNameInputCount(0);\n      } else {\n        setNameInputCount(nameInputCount + 1);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isValid && nameInputCount >= 1) {\n      inputRef.current.focus();\n    }\n  }, [isValid, nameInputCount]);\n\n  return (\n    <>\n      <dt id=\"keyName\">Name:</dt>\n      {isEditing ? (\n        <dd>\n          <input\n            type=\"text\"\n            id=\"nameID\"\n            name=\"name\"\n            aria-labelledby=\"keyName\"\n            defaultValue={name}\n            ref={inputRef}\n            aria-invalid={!isValid}\n            aria-errormessage={isValid ? \"\" : \"name-error\"}\n          />\n          {!isValid && (\n            <p id=\"name-error\" className=\"error-message\">\n              Error! Please enter a valid name.\n            </p>\n          )}\n          <button className=\"btn--save\" onClick={handleEdit}>\n            Save\n          </button>\n        </dd>\n      ) : (\n        <dd>\n          {name}\n          <button\n            id=\"NameSuccess\"\n            className=\"btn--edit\"\n            onClick={handleEdit}\n            ref={editBtnRef}\n          >\n            Edit name\n          </button>\n          <div id=\"NameSuccess\" aria-live=\"polite\">\n            {statusMessage && <p className=\"status-message\">{statusMessage}</p>}\n          </div>\n        </dd>\n      )}\n    </>\n  );\n}\n\nexport default EditName;\n","export function validateName(name) {\n  const nameRegex = /^[a-zA-Z\\s-]+$/;\n  return nameRegex.test(name);\n}\n","import React from \"react\";\nimport StaticContent from \"./components/StaticContent/StaticContent\";\nimport Email from \"./components/Email/Email\";\nimport Name from \"./components/Name/Name\";\nimport \"./components/Styles/styles.css\";\nimport \"./components/Styles/Button.css\";\n\nfunction App() {\n  return (\n    <dl>\n      <StaticContent />\n      <Email />\n      <Name />\n    </dl>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\ncreateRoot(document.getElementById(\"root\")).render(<App />);\n"],"sourceRoot":""}